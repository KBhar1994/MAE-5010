% MAE 5010 : HW1
% Problem# 4
clear all; clc;

%% Problem parameters
m = 18; % number of observations (= no. of equations)
Nx = 4; % number grid points in x direction
Ny = 4; % number grid points in y direction
n = Nx*Ny; % total number of grid points (= no. of unknowns)

%% Generate data
Z = 70*ones(m,1);
sig_sq = 1.0;
noise = normrnd(0,sig_sq,size(Z));
Z = Z + noise;

coord = rand([m,2]); % coodrinates for Zi respective to their location grid (same as (ai,bi))
l = [1 1 2 2 3 3 5 5 6 6 7 7 9 9 10 10 11 11];

% Generating the H matrix
H = zeros(m,n);
for i = 1:m
    lt = l(i);
    a = coord(i,1);
    b = coord(i,2);
    
    for j = 1:n
        if j == lt
            H(i,j) = (1-a)*(1-b);
        elseif j == lt+1
            H(i,j) = a*(1-b);
        elseif j == lt+Nx
            H(i,j) = (1-a)*b;
        elseif j == lt+Nx+1
            H(i,j) = a*b;
        end   
    end
    
end
% 
% M = mean(mean(H));
% H = H/m;

%% Solving the problem by Gradient algorithm
tol1 = 1e-4;
c1 = 1;
x1 = zeros(n,1); % inital guess value for x
B = H'*Z;
A = H'*H;
r1 = B - A*x1; 

while norm(r1)>tol1
    Nor_r1(c1) = norm(r1);
    F1(c1) = 0.5*(Z-H*x1)'*(Z-H*x1);
    c1 = c1+1;
    al1 = mean((r1'*r1)./(r1'*A*r1),'all'); % optimum step length
    x1 = x1 + al1*r1;
    r1 = r1 - al1*A*r1;
end

fprintf('%s \t %i \n','Number of iterations taken before convergence by gradient algo: ',c1);

%% Solving the problem by Conjugate Gradient algorithm 
tol2 = 1e-4;
c2 = 1;
x2 = zeros(n,1); % inital guess value for x
B = H'*Z;
A = H'*H;
r2 = B - A*x2;
p2 = r2;

while norm(r2)>tol1
    Nor_r2(c2) = norm(r2);
    F2(c2) = 0.5*(Z-H*x2)'*(Z-H*x2);
    c2 = c2+1;
    al2 = (p2'*r2)/(p2'*A*p2); 
    x2 = x2 + al2*p2;
    r2 = r2 - al2*A*p2;
    bet2 = -(r2'*A*p2)/(p2'*A*p2);
    p2 = r2 + bet2*p2; % conjugate director
end

fprintf('%s \t %i \n','Number of iterations taken before convergence by CG algo: ',c2);

%% Plotting results
figure(1); clf; 
X = reshape(x1,[Nx,Ny]);
contour(X,'fill','on');

figure(2); clf; 
X = reshape(x2,[Nx,Ny]);
contour(X,'fill','on');

figure(3); clf; 
semilogy(F1,'o:','linewidth',2);
hold on; 
semilogy(F2,'o-.','linewidth',2);
legend('gradient method','conjugate gradient method');
xlabel('k');
ylabel('f(x)');

figure(4); clf; 
semilogy(F2,'o-.','linewidth',2);
legend('conjugate gradient method');
xlim([0 20]);
xlabel('k');
ylabel('f(x)');
